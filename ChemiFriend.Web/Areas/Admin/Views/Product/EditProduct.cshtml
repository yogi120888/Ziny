@model ChemiFriend.Web.Models.InputModel.ProductModel
@using System.Configuration;

@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string BaseUrl = ConfigurationManager.AppSettings["APIBaseUrl"].ToString();
}

<link href="~/Areas/Admin/Content/js/ImgPreview/AjaxImagePreview.css" rel="stylesheet" />
<script src="~/Areas/Admin/Content/js/ImgPreview/AjaxImagePreview.jquery.min.js"></script>
<script language="javascript" type="text/javascript">
    $(function () {
        $("#ImageFile").change(function () {
            $("#dvPreview").html("");
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.jpg|.jpeg|.gif|.png|.bmp)$/;
            if (regex.test($(this).val().toLowerCase())) {
                if ($.browser.msie && parseFloat(jQuery.browser.version) <= 9.0) {
                    $("#dvPreview").show();
                    $("#dvPreview")[0].filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = $(this).val();
                }
                else {
                    if (typeof (FileReader) != "undefined") {
                        $("#dvPreview").show();
                        $("#dvPreview").append("<img width='150' height='150' />"); // Set Hight Width
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $("#dvPreview img").attr("src", e.target.result);
                            // Hide Editable Image
                            $("#dvShowImg").hide();
                        }
                        reader.readAsDataURL($(this)[0].files[0]);
                    } else {
                        alert("This browser does not support FileReader.");
                    }
                }
            } else {
                alert("Please upload a valid image file.");
            }
        });
    });
</script>

@using (Html.BeginForm("EditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    @Html.HiddenFor(x => x.ProductId)
    <div id="content">
        <div id="content-header">
            
            <div class="btnOnTop"><button type="submit" class="btn btn-success">Update</button>&nbsp;<a href="@Url.Action("GetProductList", "Product", new { area = "Admin" })" class="btn btn-info">Product List</a></div>
        </div>
        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span12">
                    <div class="span6">
                        <div class="widget-box">
                            <div class="widget-title">
                                <span class="icon"> <i class="icon-align-justify"></i> </span>
                                <h5>Add Product</h5>
                            </div>
                            <div class="widget-content nopadding">
                                <div class="control-group">
                                    <label class="control-label">Company</label>
                                    <div class="controls">
                                        @Html.DropDownListFor(x => x.ProductCategoryId, new SelectList(ViewBag.BindProductCategory, "ProductCategoryId", "ProductCategoryName"), "Select Company", new { @class = "span11" })
                                        <span class="YError">@Html.ValidationMessageFor(x => x.ProductCategoryId)</span>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Brand</label>
                                    <div class="controls">
                                        @Html.DropDownListFor(x => x.ProductSubCategoryId, new SelectList(ViewBag.BindProductSubCategory, "ProductSubCategoryId", "ProductSubCategoryName"), "Select Brand", new { @class = "span11" })
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Product</label>
                                    <div class="controls">
                                        @Html.TextBoxFor(x => x.ProductName, new { @class = "span11" })
                                        <span class="YError">@Html.ValidationMessageFor(x => x.ProductName)</span>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Product Type</label>
                                    <div class="controls">
                                        @Html.DropDownListFor(x => x.ProductTypeId, new SelectList(ViewBag.BindProductTypes, "ProductTypeId", "ProductTypeName"), "Select Product Type", new { @class = "span11" })
                                        <span class="YError">@Html.ValidationMessageFor(x => x.ProductTypeId)</span>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Marketing Company</label>
                                    <div class="controls">
                                        @Html.TextBoxFor(x => x.MarketingCompany, new { @class = "span11" })
                                        @*<span class="YError">@Html.ValidationMessageFor(x => x.MarketingCompany)</span>*@
                                    </div>
                                </div>
                                <div class="control-group">
                                    &nbsp;
                                </div>

                                <div class="control-group" style="display:none;">
                                    <label class="control-label" id="vdImage">Upload Product:</label>
                                    <div class="controls">
                                        <input type="file" id="ImageFile" name="ImageFile" class="span11" />
                                    </div>
                                </div>
                                <div class="control-group" style="display:none;">
                                    <div id="dvShowImg" style="padding:10px;">
                                        @if (Model != null && !string.IsNullOrEmpty(Model.ProductImagePath))
                                        {
                                            string ImagePath = BaseUrl + "Images/UploadImg/" + Model.ProductImagePath;
                                            <img src="@ImagePath" width="150" height="150" />
                                        }
                                    </div>
                                    <div id="dvPreview">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span6">
                        <div class="widget-box">
                            <div class="widget-title">
                            </div>
                            <div class="widget-content nopadding">
                                <div class="control-group">
                                    <label class="control-label">MRP</label>
                                    <div class="controls">
                                        @Html.TextBoxFor(x => x.MRP, new { @class = "span11" })
                                        <span class="YError">@Html.ValidationMessageFor(x => x.MRP)</span>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">PTR</label>
                                    <div class="controls">
                                        @Html.TextBoxFor(x => x.PTR, new { @class = "span11" })
                                        <span class="YError">@Html.ValidationMessageFor(x => x.PTR)</span>
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Product Molecules</label>
                                    <div class="controls">
                                        @Html.DropDownListFor(x => x.ProductCodeId, new SelectList(ViewBag.BindProductCode, "ProductCodeId", "ProductCodes"), "Select Product Molecules", new { @class = "span11" })
                                        <span class="YError">@Html.ValidationMessageFor(x => x.PTR)</span>
                                    </div>
                                </div>
                                <div class="control-group">
                                    &nbsp;
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript">
        $("#ProductCategoryId").change(function () {
            var bindData = "<option value=''></option>";
            var productCategoryId = $("#ProductCategoryId").val();
            var productCategory = $("#ProductCategoryId option:selected").text();
            $("#MarketingCompany").val(productCategory);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("BindProductSubCategory", "Product", new { area="Admin"})",
                    data: '{ Id: "' + productCategoryId + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (resp) {
                        $.each(resp, function (key, value) {
                            bindData += "<option value='" + value.ProductSubCategoryId + "'>" + value.ProductSubCategoryName + "</option>";
                        });
                        $("#ProductSubCategoryId").html(bindData);
                    },
                    error: function (resp) {
                        alert('something went wrong !');
                    }
                });
            })
    </script>

    @*=== jQeury Gritter, a growl-like notifications ===*@

    @if (!string.IsNullOrEmpty(ViewBag.Success))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                var msg = '@ViewBag.Success';
                GritterNoteSuccess(msg);
            });
        </script>
    }

    @if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                var msg = '@ViewBag.Error';
                GritterNoteError(msg);
            });
        </script>
    }
}
